{"version":3,"sources":["GitInfo.js","Timetable.js","App.js","index.js","registerServiceWorker.js"],"names":["GitInfo","gitInfo","hash","date","DAYS","Item","item","alterations","length","forEach","alteration","i","push","key","style","color","message","description","room","location","dayRows","day","dayName","isNaN","items","dayNameCell","rowSpan","map","startTime","endTime","dayRow","Timetable","timetable","className","cellSpacing","cellPadding","url","URL","window","href","console","log","DEBUG","searchParams","get","localDataSource","getLocalDataSourceURL","localDataSourceName","reducer","state","action","setSingleState","name","value","type","field","visible","fetch","uri","dispatch","a","async","reduce","stateName","loading","axios","response","data","error","Error","title","errorInfo","statusCode","options","JSON","stringify","TimetableWithHeader","vendor","setVisible","onClick","e","preventDefault","initialState","App","React","useReducer","getDataSourceURL","useEffect","cacheBustUrl","Date","getTime","timetables","fetchTimetables","textAlign","src","process","result","vendorIdx","timetableIdx","Boolean","renderTimetables","ReactDOM","render","document","getElementById","navigator","addEventListener","swUrl","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","catch"],"mappings":"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","file":"static/js/main.5ef47a82.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nexport default function GitInfo({ gitInfo }) {\r\n  return (\r\n    <>\r\n      <h2>Version Info</h2>\r\n      <span>Hash: {gitInfo.hash}, Date: {gitInfo.date}</span>\r\n    </>\r\n  );\r\n}\r\n","import React from \"react\";\r\n\r\nconst DAYS = [\"Su\", \"Mo\", \"Tu\", \"We\", \"Th\", \"Fr\", \"Sa\"];\r\n\r\nconst Item = ({ item }) => {\r\n  const alterations = [];\r\n  if (item.alterations && item.alterations.length > 0) {\r\n    item.alterations.forEach((alteration, i) => {\r\n      alterations.push(<br key={\"br\" + i} />);\r\n      const date = alteration.date || \"No date\";\r\n      alterations.push(<span key={\"alteration-\" + i} style={{ color: \"red\" }}>{date + \", \" + alteration.message}</span>);\r\n    });\r\n  }\r\n  return (\r\n    <div >\r\n      <div>{item.description}</div>\r\n      <div>{item.room}{item.location}</div>\r\n      <div>{alterations}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nfunction dayRow(i, dayNameCell, item) {\r\n  return (\r\n    <tr key={i}>\r\n      {dayNameCell(i)}\r\n      <td>{item.startTime}</td>\r\n      <td>{item.endTime}</td>\r\n      <td><Item item={item} key={i} /></td>\r\n    </tr>\r\n  );\r\n}\r\n\r\nfunction dayRows(day) {\r\n  const dayName = isNaN(day.day) ? day.day : DAYS[day.day];\r\n  const item0 = day.items[0];\r\n  if (!item0) {\r\n    return null;\r\n  }\r\n  const dayNameCell = (i) => (i === 0) ? <td rowSpan={day.items.length}>{dayName}</td> : null;\r\n  return day.items.map((item, i) => dayRow(i, dayNameCell, item));\r\n}\r\n\r\nconst Timetable = ({ timetable }) => (\r\n  <table className=\"tableTimetable\" cellSpacing={0} cellPadding={0}>\r\n    <tbody>\r\n      {timetable.map(dayRows)}\r\n    </tbody>\r\n  </table>\r\n);\r\n\r\nexport default Timetable;\r\n","import React from \"react\";\r\nimport axios from \"axios\";\r\n\r\nimport gitInfo from \"./static/gitInfo.json\";\r\nimport \"./App.css\";\r\nimport GitInfo from \"./GitInfo\";\r\nimport Timetable from \"./Timetable\";\r\n\r\nconst url = new URL(window.location.href);\r\nconsole.log(\"Use DEBUG query parameter to use local data (not live data).\");\r\nconst DEBUG = url.searchParams.get(\"DEBUG\") !== \"false\";\r\nconst localDataSource = url.searchParams.get(\"localDataSource\");\r\n\r\nfunction getLocalDataSourceURL(localDataSourceName) {\r\n  switch (localDataSource) {\r\n    case \"ok\": return \"./test/laneSwimming.json\";\r\n    case \"singleDataSourceError\": return \"./test/laneSwimming.s10error.json\";\r\n    case \"error\": return \"./test/laneSwimming.error.json\";\r\n    case \"20190427\": return \"./test/20190427-225524_laneSwimming.json\";\r\n    default: return null;\r\n  }\r\n}\r\n\r\nfunction getDataSourceURL(localDataSource) {\r\n  if (DEBUG && localDataSource) {\r\n    const url = getLocalDataSourceURL(localDataSource);\r\n    if (url) {\r\n      return url;\r\n    }\r\n  }\r\n  return \"https://c1dz9rg5cd.execute-api.eu-west-2.amazonaws.com/prod/laneSwimmingData\";\r\n}\r\n\r\nfunction reducer(state, action) {\r\n  const setSingleState = (name, value) => {\r\n    return {\r\n      ...state,\r\n      [name]: value,\r\n    };\r\n  };\r\n  switch (action.type) {\r\n    case \"set\": return setSingleState(action.field.name, action.field.value);\r\n    case \"reduce\": return {\r\n      ...state,\r\n      [action.field.name]: action.reducer(state[action.field.name]),\r\n    };\r\n    case \"changeTimetableVisibility\": return setSingleState(\"visible\", {\r\n      ...state.visible,\r\n      [action.key]: action.visible,\r\n    });\r\n  }\r\n  return state;\r\n}\r\n\r\n\r\nasync function fetch(name, uri, dispatch) {\r\n  const stateName = \"fetch.\" + name;\r\n  const reduce = (name, reducer) => dispatch({ type: \"reduce\", field: { name }, reducer });\r\n  reduce(stateName, () => ({\r\n    // initial state. empty object apart from loading\r\n    loading: true,\r\n  }));\r\n  try {\r\n    const response = await axios.get(uri);\r\n    reduce(stateName, (state) => ({\r\n      ...state,\r\n      data: response.data,\r\n    }));\r\n    return response;\r\n  } catch (err) {\r\n    err.uri = uri;\r\n    reduce(stateName, (state) => ({\r\n      ...state,\r\n      error: err,\r\n    }));\r\n    throw err;\r\n  } finally {\r\n    reduce(stateName, (state) => ({\r\n      ...state,\r\n      loading: null,\r\n    }));\r\n  }\r\n}\r\n\r\n\r\nfunction Error({\r\n  title,\r\n  error,\r\n}) {\r\n  const errorInfo = error.statusCode\r\n    ? [\r\n      error.statusCode,\r\n      error.options && error.options.uri,\r\n    ]\r\n    : error;\r\n\r\n  return (\r\n    <div>\r\n      <h1>{title}</h1>\r\n      <div>\r\n        {\r\n          (typeof errorInfo === \"string\")\r\n            ? error\r\n            : <pre>{JSON.stringify(error, null, 2)}</pre>\r\n        }\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\nfunction TimetableWithHeader({\r\n  name,\r\n  timetable,\r\n  vendor,\r\n  visible = true,\r\n  setVisible,\r\n}) {\r\n  name = name || \"Regular Timetable\";\r\n  vendor = vendor || \"Unknown vendor\";\r\n\r\n  const onClickHeading = (e) => {\r\n    e.preventDefault();\r\n    setVisible && setVisible(!visible);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h1>\r\n        <a\r\n          href=\"#\"\r\n          onClick={onClickHeading}\r\n        >\r\n          {name} ({vendor})\r\n        </a>\r\n      </h1>\r\n      {visible && (\r\n        <Timetable timetable={timetable} />\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\nconst initialState = {};\r\n\r\nfunction App() {\r\n  const [state, dispatch] = React.useReducer(reducer, initialState);\r\n\r\n  const url = getDataSourceURL(localDataSource);\r\n\r\n  React.useEffect(() => {\r\n    (async () => {\r\n      const cacheBustUrl = url + \"?\" + new Date().getTime();\r\n      try {\r\n        const response = await fetch(\"timetables\", cacheBustUrl, dispatch)\r\n        dispatch({ type: \"set\", field: { name: \"timetables\", value: response.data } });\r\n      } catch (err) {\r\n        // ignore - handled by fetch\r\n      }\r\n    })();\r\n  }, [url]);\r\n\r\n  const renderTimetables = (state) => {\r\n    if (!state) {\r\n      return \"No state!\";\r\n    }\r\n\r\n    console.log(state);\r\n\r\n    const { timetables, \"fetch.timetables\": fetchTimetables } = state;\r\n\r\n    return (\r\n      <>\r\n        {fetchTimetables && fetchTimetables.loading && (\r\n          <div style={{ textAlign: \"center\" }}>\r\n            <p>Loading Timetables...</p>\r\n            <img src={`${process.env.PUBLIC_URL}/loader.gif`} />\r\n          </div>\r\n        )}\r\n\r\n        {fetchTimetables && fetchTimetables.error && (\r\n          <Error\r\n            title=\"Fetch Timetables Error\"\r\n            error={fetchTimetables.error}\r\n          />\r\n        )}\r\n\r\n        {\r\n          timetables && timetables.reduce((result, { vendor, timetables }, vendorIdx) => {\r\n            timetables.forEach(({ name, timetable, error }, timetableIdx) => {\r\n              if (error) {\r\n                result.push(\r\n                  <Error\r\n                    title={`${name} (${vendor || \"Unknown vendor\"})`}\r\n                    error={error}\r\n                    key={result.length}\r\n                  />\r\n                );\r\n              } else {\r\n                const key = `timetable[${vendorIdx}][${timetableIdx}]`;\r\n                const visible = Boolean(state.visible && state.visible[key]);\r\n                const setVisible = (visible) => dispatch({ type: \"changeTimetableVisibility\", key, visible });\r\n                result.push(\r\n                  <TimetableWithHeader\r\n                    name={name}\r\n                    timetable={timetable}\r\n                    vendor={vendor}\r\n                    key={key}\r\n                    visible={visible}\r\n                    setVisible={setVisible}\r\n                  />\r\n                );\r\n              }\r\n            });\r\n            return result;\r\n          }, [])\r\n        }\r\n      </>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      {renderTimetables(state)}\r\n      <hr />\r\n      <GitInfo gitInfo={gitInfo} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport registerServiceWorker from './registerServiceWorker';\r\nimport './index.css';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\nregisterServiceWorker();\r\n","// In production, we register a service worker to serve assets from local cache.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\r\n// cached resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\r\n// This link also includes instructions on opting out of this behavior.\r\n\r\nexport default function register() {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n      navigator.serviceWorker\r\n        .register(swUrl)\r\n        .then(registration => {\r\n          registration.onupdatefound = () => {\r\n            const installingWorker = registration.installing;\r\n            installingWorker.onstatechange = () => {\r\n              if (installingWorker.state === 'installed') {\r\n                if (navigator.serviceWorker.controller) {\r\n                  // At this point, the old content will have been purged and\r\n                  // the fresh content will have been added to the cache.\r\n                  // It's the perfect time to display a \"New content is\r\n                  // available; please refresh.\" message in your web app.\r\n                  console.log('New content is available; please refresh.');\r\n                } else {\r\n                  // At this point, everything has been precached.\r\n                  // It's the perfect time to display a\r\n                  // \"Content is cached for offline use.\" message.\r\n                  console.log('Content is cached for offline use.');\r\n                }\r\n              }\r\n            };\r\n          };\r\n        })\r\n        .catch(error => {\r\n          console.error('Error during service worker registration:', error);\r\n        });\r\n    });\r\n  }\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n"],"sourceRoot":""}